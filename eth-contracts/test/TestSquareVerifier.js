// import SquareVerifier solidity contract generated by Zokrates
let SquareVerifier = artifacts.require('SquareVerifier');

// import correct proof and inputs generated by Zokrates
let squareProof = require('../../zokrates/code/square/proof.json');

contract('TestSquareVerifier', accounts => {

    const contract_owner = accounts[0];

    // Test verification with correct proof
    describe('Test verification with correct and incorrect proof', function(){

        beforeEach(async function () {
            this.contract = await SquareVerifier.new({from: contract_owner});
        })

        it('verification of inputs succeeds with correct proof', async function(){
            let verification = await this.contract.verifyTx.call(squareProof.proof.a, squareProof.proof.b, squareProof.proof.c, squareProof.inputs);
            assert.equal(verification, true, "incorrectly did not verify");
        })

        it('verification of inputs fails with incorrect proof', async function(){
            squareProof.inputs=[1, 2];
            let verification = await this.contract.verifyTx.call(squareProof.proof.a, squareProof.proof.b, squareProof.proof.c, squareProof.inputs);
            assert.equal(verification, false, "incorrectly verified");
        })
    });
})